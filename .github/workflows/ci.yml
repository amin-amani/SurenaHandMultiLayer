name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:

env:
  stm32cubeIDE_path: "/opt/st/stm32cubeide_1.17.0/stm32cubeide"
  firmware_path: "${{ github.workspace }}/firmware"
  ws_path: "/home/ws/"

jobs:
  build-job:
    name: Build Firmware
    runs-on: ubuntu-latest
    container:
      image: aminamani/ubuntu-raymon:22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show STM32CubeIDE and Firmware paths
        run: |
          echo "STM32CubeIDE Path: $stm32cubeIDE_path"
          echo "Firmware Path: $firmware_path"

      - name: Build with STM32CubeIDE
        run: |
          "$stm32cubeIDE_path" \
            --launcher.suppressErrors \
            -nosplash \
            -application org.eclipse.cdt.managedbuilder.core.headlessbuild \
            -build all \
            -importAll "$firmware_path" \
            -data "$ws_path"
            cd "$firmware_path"
            mkdir build && cd build
            cmake ..
            make

  # test-job:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   needs: build-job
  #   container:
  #     image: aminamani/ubuntu-raymon:22.04
  #   steps:
  #     - uses: actions/checkout@v4

      # - name: Check if test files exist
      #   run: |
      #     if [ ! -d "${{ github.workspace }}/firmware/test" ] || [ -z "$(ls -A ${{ github.workspace }}/firmware/test 2>/dev/null)" ]; then
      #       echo "No firmware test files found. Skipping tests."
      #       exit 78
      #     fi

      # - name: Run Unit Tests
      #   run: |
      #     cd "${{ github.workspace }}/firmware"
      #     mkdir build && cd build
      #     cmake ..
      #     make
      #     ls test/ -la || true
      #     if [ -f ./test/RunAllTests ]; then ./test/RunAllTests; else echo "Test binary not found! Skipping test run."; fi
      #     Xvfb :99 -screen 0 1366x768x24 &
      #     make coverage_report || echo "Coverage report target not found."

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-report
      #     path: |
      #       ${{ github.workspace }}/firmware/build/coverage_report/
      #       ${{ github.workspace }}/firmware/build/coverage.info
